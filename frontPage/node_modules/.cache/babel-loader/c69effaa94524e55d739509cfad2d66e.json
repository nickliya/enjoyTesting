{"remainingRequest":"/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/node_modules/babel-loader/lib/index.js!/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/src/views/UIlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/src/views/UIlist.vue","mtime":1600912667857},{"path":"/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/node_modules/cache-loader/dist/cjs.js","mtime":1600912359670},{"path":"/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/node_modules/babel-loader/lib/index.js","mtime":1600912349814},{"path":"/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/node_modules/cache-loader/dist/cjs.js","mtime":1600912359670},{"path":"/Users/yangqing/Workspace/DEV/TestHomeForTS/test-home/node_modules/vue-loader/lib/index.js","mtime":1600912725450}],"contextDependencies":[],"result":["import \"ant-design-vue/lib/button/style\";\nimport _Button from \"ant-design-vue/lib/button\";\nimport \"ant-design-vue/lib/input/style\";\nimport _Input from \"ant-design-vue/lib/input\";\nimport \"ant-design-vue/lib/tree/style\";\nimport _Tree from \"ant-design-vue/lib/tree\";\nimport { T5treeData } from \"../assets/jsonData/t5_ui.js\";\nimport { chjtreeData } from \"../assets/jsonData/chj_ui.js\";\nimport { A39treeData } from \"../assets/jsonData/a39_ui.js\";\nimport { A12treeData } from \"../assets/jsonData/a12_ui.js\";\nvar UItreeData = T5treeData; // console.log(treeData)\n\n/*\n初始化数据列表，添加scoplots\n*/\n\nvar initList = function initList(data) {\n  for (var i = 0; i < data.length; i++) {\n    var node = data[i];\n    node['scopedSlots'] = {\n      title: 'title'\n    };\n\n    if (node.children) {\n      initList(node.children);\n    }\n  }\n};\n\ninitList(UItreeData);\n/*\n构建一个数据列表，用于后面的数据筛选\n*/\n\nvar dataList = [];\n\nvar generateList = function generateList(data, prekey) {\n  var preKey = prekey || '0';\n\n  for (var i = 0; i < data.length; i++) {\n    var node = data[i];\n    var key = \"\".concat(preKey, \"-\").concat(i);\n    var titlestr = node.title;\n    dataList.push({\n      key: key,\n      title: titlestr\n    });\n\n    if (node.children) {\n      generateList(node.children, key);\n    }\n  }\n};\n\ngenerateList(UItreeData);\n/*\n获取传入列表的父级元素，字符串截取舍弃最后两位\n*/\n\nvar getParentKey = function getParentKey(key, tree) {\n  var parentKey;\n  parentKey = key.slice(0, -2);\n  return parentKey;\n};\n\nexport default {\n  data: function data() {\n    return {\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true,\n      UItreeData: UItreeData\n    };\n  },\n  components: {\n    'a-tree': _Tree,\n    'a-input-search': _Input,\n    'a-button': _Button,\n    'a-button-group': _Button.Group\n  },\n  methods: {\n    onExpand: function onExpand(expandedKeys) {\n      this.expandedKeys = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    onChange: function onChange(e) {\n      var value = e.target.value;\n      console.log(value);\n      var NewexpandedKeys = dataList.map(function (item) {\n        if (value == \"\") {\n          // 如果传入的值是空，那么就收回所有扩展\n          return null;\n        }\n\n        if (item.title.indexOf(value) > -1) {\n          // console.log(item.title.indexOf(value))\n          return getParentKey(item.key, dataList);\n        }\n\n        return null;\n      }); // 筛选\n\n      NewexpandedKeys = NewexpandedKeys.filter(function (item, i, self) {\n        return item && self.indexOf(item) === i;\n      }); //去重\n\n      Object.assign(this, {\n        expandedKeys: NewexpandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    },\n    changeData: function changeData(e) {\n      var _this = this;\n\n      var value = e.target.id;\n\n      switch (value) {\n        case 'chj':\n          return new Promise(function (resolve) {\n            //异步加载解决渲染问题\n            _this.UItreeData = chjtreeData;\n            _this.expandedKeys = [];\n            dataList = [];\n            initList(_this.UItreeData);\n            generateList(_this.UItreeData); // resolve()\n            // return\n          });\n\n        case 'T5':\n          return new Promise(function (resolve) {\n            _this.UItreeData = T5treeData;\n            _this.expandedKeys = [];\n            dataList = [];\n            initList(_this.UItreeData);\n            generateList(_this.UItreeData); // resolve()\n            // return\n          });\n\n        case 'A39':\n          return new Promise(function (resolve) {\n            _this.UItreeData = A39treeData;\n            _this.expandedKeys = [];\n            dataList = [];\n            initList(_this.UItreeData);\n            generateList(_this.UItreeData);\n          });\n\n        case 'A12':\n          return new Promise(function (resolve) {\n            _this.UItreeData = A12treeData;\n            _this.expandedKeys = [];\n            dataList = [];\n            initList(_this.UItreeData);\n            generateList(_this.UItreeData);\n          });\n      }\n    }\n  }\n};",{"version":3,"sources":["UIlist.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <a-input-search style=\"margin-bottom: 8px\" placeholder=\"Search\" @change=\"onChange\" />\n    <a-button-group>\n      <a-button id='A39' @click=\"changeData\" type='primary'>A39</a-button>\n      <a-button id='T5' @click=\"changeData\" type='primary'>T5</a-button>\n      <a-button id='chj' @click=\"changeData\" type='primary'>车和家</a-button>\n      <a-button id='A12' @click=\"changeData\" type='primary'>A12</a-button>\n    </a-button-group>\n    <a-tree\n      @expand=\"onExpand\"\n      :expandedKeys=\"expandedKeys\"\n      :autoExpandParent=\"autoExpandParent\"\n      :treeData=\"UItreeData\"\n      >\n      <template slot=\"title\" slot-scope=\"{title}\">\n        <span v-if=\"title.indexOf(searchValue) > -1\">\n          {{title.substr(0, title.indexOf(searchValue))}}\n          <span style=\"color: #f50\">{{searchValue}}</span>\n          {{title.substr(title.indexOf(searchValue) + searchValue.length)}}\n        </span>\n        <span v-else>{{title}}</span>\n      </template>\n    </a-tree>\n  </div>\n</template>\n\n<script>\nimport { Tree, Input, Button } from 'ant-design-vue';\nimport { T5treeData } from '../assets/jsonData/t5_ui.js';\nimport { chjtreeData } from '../assets/jsonData/chj_ui.js';\nimport { A39treeData } from '../assets/jsonData/a39_ui.js';\nimport { A12treeData } from '../assets/jsonData/a12_ui.js';\n\nvar UItreeData = T5treeData\n// console.log(treeData)\n\n/*\n初始化数据列表，添加scoplots\n*/\nconst initList = (data) => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i]\n    node['scopedSlots'] = { title: 'title' }\n    if (node.children) {\n      initList(node.children)\n    }\n  }\n}\ninitList(UItreeData)\n\n/*\n构建一个数据列表，用于后面的数据筛选\n*/\nvar dataList = []\n\nconst generateList = (data, prekey) => {\n  const preKey = prekey || '0'\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i]\n    const key = `${preKey}-${i}`\n    const titlestr = node.title\n    dataList.push({ key, title: titlestr })\n    if (node.children) {\n      generateList(node.children, key)\n    }\n  }\n}\ngenerateList(UItreeData)\n\n/*\n获取传入列表的父级元素，字符串截取舍弃最后两位\n*/\nconst getParentKey = (key, tree) => {\n  let parentKey\n  parentKey = key.slice(0,-2)\n  return parentKey\n}\n\nexport default {\n  data () {\n    return {\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true,\n      UItreeData,\n    }\n  },\n  components: {\n  'a-tree': Tree,\n  'a-input-search': Input,\n  'a-button': Button,\n  'a-button-group': Button.Group\n  },\n  methods: {\n    onExpand (expandedKeys) {\n      this.expandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n    onChange (e) {\n      const value = e.target.value\n      console.log(value)\n      var NewexpandedKeys = dataList.map((item) => {\n        if (value == \"\") {\n          // 如果传入的值是空，那么就收回所有扩展\n          return null\n        }\n        if (item.title.indexOf(value) > -1) {\n          // console.log(item.title.indexOf(value))\n          return getParentKey(item.key, dataList)\n        }\n        return null\n      }) // 筛选\n      NewexpandedKeys = NewexpandedKeys.filter((item, i, self) => item && self.indexOf(item) === i) //去重\n      Object.assign(this, {\n        expandedKeys: NewexpandedKeys,\n        searchValue: value,\n        autoExpandParent: true,\n      })\n    },\n    changeData (e) {\n      const value = e.target.id\n      switch(value){\n        case 'chj':\n          return new Promise((resolve) => { //异步加载解决渲染问题\n            this.UItreeData = chjtreeData\n            this.expandedKeys = []\n            dataList = []\n            initList(this.UItreeData)\n            generateList(this.UItreeData)\n            // resolve()\n            // return\n          })\n        case 'T5':\n          return new Promise((resolve) => {\n            this.UItreeData = T5treeData\n            this.expandedKeys = []\n            dataList = []\n            initList(this.UItreeData)\n            generateList(this.UItreeData)\n            // resolve()\n            // return\n          })\n        case 'A39':\n          return new Promise((resolve) => {\n            this.UItreeData = A39treeData\n            this.expandedKeys = []\n            dataList = []\n            initList(this.UItreeData) \n            generateList(this.UItreeData)\n          })\n        case 'A12':\n          return new Promise((resolve) => {\n            this.UItreeData = A12treeData\n            this.expandedKeys = []\n            dataList = []\n            initList(this.UItreeData) \n            generateList(this.UItreeData)\n          })\n      }\n    }\n  },\n}\n</script>\n\n"],"sourceRoot":"src/views"}]}